*sisr.txt* search in syntax regions
          ▄▄▄▄▄▄▄ ▄▄▄ ▄▄▄▄▄▄▄ ▄▄▄▄▄▄   ~
         █       █   █       █   ▄  █  ~
         █  ▄▄▄▄▄█   █  ▄▄▄▄▄█  █ █ █  ~
         █ █▄▄▄▄▄█   █ █▄▄▄▄▄█   █▄▄█▄ ~
         █▄▄▄▄▄  █   █▄▄▄▄▄  █    ▄▄  █~
          ▄▄▄▄▄█ █   █▄▄▄▄▄█ █   █  █ █~
         █▄▄▄▄▄▄▄█▄▄▄█▄▄▄▄▄▄▄█▄▄▄█  █▄█~
        allows searching within regions
     defined by start and end regex-patterns

INTRODUCTION                              *sisr*

The idea for this plugin started when I wanted to search for a pattern but only
inside equation-regions in a tex-document. I found an answer
(https://vi.stackexchange.com/a/4265) by `jjaderberg` on StackExchange and
thought I would turn this into a plugin with some extended functionality.

This plugin provides commands to search within specified syntax regions.
One specifies these regions by the name of the syntax item.
The matches of the search are populated in the location list which can be
traversed using `lnext` and `lprevious`.

USAGE                                     *sisr-usage*

To search inside a custom syntax region use the command *Sisr* .
The *Sisr* command takes four arguments (separated by space):

    1. *regionPattern*: Name of regions to include (can be regex),
        e.g. "texMathZone.".
    2. *searchPattern*: The pattern to search for within the region.
    3. *ignorePattern*: Name of regions to exclude even if currently in
       *regionPattern* (can be regex), e.g. "texComment".

To for example search for `Einstein` within `\cite{...}`-regions, do:
>
    Sisr texCite Einstein texComment
<

If you want to do this often you can create your own dedicated function and
command by for example:
>
    function! SisrTexCite(pattern)
        let l:regionPattern = "texCite"
        let l:ignorePattern = "texComment"
        call sisr#syntax_regions_search(l:regionPattern, a:pattern, l:ignorePattern)
    endfunction

    command! -nargs=1 SisrTexCite call SisrTexCite(<f-args>)
<
which can be used as
>
    SisrTexCite Einstein
>

                                          *sisr-tex*
For tex-documents there is one pre-defined command for searching within
math-regions, including `$...$`, `\begin{equation}...\end{equation}` etc
simultaneously. To search for for example `x` only within math-regions of a
tex document, do:
>
    SisrTexEq x
<
which by default ignores any comments (starting with `%`).
This will open the |location-list| and you can traverse the matches by using
|lnext| and |lprevious| which you can optionally bind to some keys.

FUNCTIONS                                 *sisr-functions*

The main function of *sisr* is *sisr#syntax_regions_search* which takes the
same arguments as the command *Sisr*
To find out what certain syntax regions are called you can use the function
*sisr#get_current_regions* to get the names of the regions at the current
cursor location.

ISSUES                                    *sisr-issues*

*Sisr* seem to not like some type of folding and sometimes fails.

CONTRIBUTION                              *sisr-contribution*

*Sisr* is in its infancy and any contribution and feedback is welcome.
Additional custom commands such as the one for equations in tex for other
syntax regions would be nice but I'm also happy to hear some ideas
of maybe a better way to structure extensions in order to not have to support
all possible languages etc.

For contribution, go to `https://github.com/AckslD/vim-sisr`.
